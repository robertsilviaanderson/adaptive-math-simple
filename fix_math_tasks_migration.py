#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü—ã math_tasks
- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã: level -> level, topic -> topic_id
- –ú–∏–≥—Ä–∞—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
"""

import os
import sys
import sqlite3
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app import app
from models import db, Topic

def backup_database():
    """–°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    import shutil
    db_path = 'instance/math_learning.db'
    backup_path = f'instance/math_learning_fix_backup_{datetime.now().strftime("%Y%m%d_%H%M%S")}.db'
    
    if os.path.exists(db_path):
        shutil.copy2(db_path, backup_path)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_path}")
        return backup_path
    else:
        print("‚ö†Ô∏è –§–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return None

def migrate_math_tasks_table():
    """–ú–∏–≥—Ä–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã math_tasks"""
    db_path = 'instance/math_learning.db'
    
    if not os.path.exists(db_path):
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    backup_path = backup_database()
    if not backup_path:
        return False
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ sqlite3
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é —Ç–∞–±–ª–∏—Ü—ã math_tasks...")
        
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        cursor.execute("PRAGMA table_info(math_tasks)")
        columns = cursor.fetchall()
        column_names = [col[1] for col in columns]
        
        print(f"üìã –¢–µ–∫—É—â–∏–µ —Å—Ç–æ–ª–±—Ü—ã: {column_names}")
        
        # 2. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
        cursor.execute("""
            CREATE TABLE math_tasks_new (
                id INTEGER PRIMARY KEY,
                title VARCHAR(200) NOT NULL,
                description TEXT NOT NULL,
                answer_type VARCHAR(50) NOT NULL,
                correct_answer JSON NOT NULL,
                answer_schema JSON,
                explanation TEXT,
                topic_id INTEGER NOT NULL,
                level VARCHAR(10) NOT NULL,
                max_score FLOAT DEFAULT 1.0,
                created_by INTEGER NOT NULL,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                is_active BOOLEAN DEFAULT 1,
                FOREIGN KEY(topic_id) REFERENCES topics(id),
                FOREIGN KEY(created_by) REFERENCES users(id)
            )
        """)
        
        # 3. –ü–æ–ª—É—á–∞–µ–º ID –ø–µ—Ä–≤–æ–π —Ç–µ–º—ã –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
        with app.app_context():
            first_topic = Topic.query.first()
            if not first_topic:
                print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π —Ç–µ–º—ã –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏")
                conn.close()
                return False
            default_topic_id = first_topic.id
            print(f"üìå –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–º—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {first_topic.name} (ID: {default_topic_id})")
        
        # 4. –ö–æ–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç–∞—Ä–æ–π —Ç–∞–±–ª–∏—Ü—ã –≤ –Ω–æ–≤—É—é
        if 'level' in column_names and 'topic' in column_names:
            # –°—Ç–∞—Ä–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ - –Ω—É–∂–Ω–∞ –ø–æ–ª–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è
            cursor.execute("""
                INSERT INTO math_tasks_new 
                (id, title, description, answer_type, correct_answer, answer_schema, 
                 explanation, topic_id, level, max_score, created_by, created_at, is_active)
                SELECT 
                    id, title, description, answer_type, correct_answer, answer_schema,
                    explanation, 
                    ? as topic_id,
                    CASE 
                        WHEN level <= 1 THEN 'low'
                        WHEN level <= 2 THEN 'medium'
                        ELSE 'high'
                    END as level,
                    max_score, created_by, created_at, is_active
                FROM math_tasks
            """, (default_topic_id,))
            
            migrated_count = cursor.rowcount
            print(f"‚úÖ –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ {migrated_count} –∑–∞–¥–∞–Ω–∏–π –∏–∑ —Å—Ç–∞—Ä–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã")
            
        elif 'topic_id' in column_names and 'level' in column_names:
            # –ù–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —É–∂–µ –µ—Å—Ç—å - –ø—Ä–æ—Å—Ç–æ –∫–æ–ø–∏—Ä—É–µ–º
            cursor.execute("""
                INSERT INTO math_tasks_new 
                SELECT * FROM math_tasks
            """)
            print("‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –¥–∞–Ω–Ω—ã–µ (—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —É–∂–µ –Ω–æ–≤–∞—è)")
        else:
            print("‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã, —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é —Ç–∞–±–ª–∏—Ü—É")
        
        # 5. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Ç–∞–±–ª–∏—Ü—É –∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –Ω–æ–≤—É—é
        cursor.execute("DROP TABLE math_tasks")
        cursor.execute("ALTER TABLE math_tasks_new RENAME TO math_tasks")
        
        # 6. –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        conn.commit()
        conn.close()
        
        print("üéâ –ú–∏–≥—Ä–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã math_tasks –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
        if backup_path and os.path.exists(backup_path):
            import shutil
            shutil.copy2(backup_path, db_path)
            print("üîÑ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏")
        return False

def show_migration_info():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∏–≥—Ä–∞—Ü–∏–∏"""
    print("=" * 60)
    print("–ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ú–ò–ì–†–ê–¶–ò–ò –¢–ê–ë–õ–ò–¶–´ MATH_TASKS")
    print("=" * 60)
    print()
    print("–ò–∑–º–µ–Ω–µ–Ω–∏—è:")
    print("‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã math_tasks:")
    print("  - level (INTEGER) -> level (VARCHAR: 'low'/'medium'/'high')")
    print("  - topic (VARCHAR) -> topic_id (INTEGER, –≤–Ω–µ—à–Ω–∏–π –∫–ª—é—á)")
    print("‚Ä¢ –ú–∏–≥—Ä–∞—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ")
    print("‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —É—Ä–æ–≤–Ω–µ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:")
    print("  - 1 -> 'low'")
    print("  - 2 -> 'medium'") 
    print("  - 3+ -> 'high'")
    print()
    print("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ë—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print()

if __name__ == "__main__":
    show_migration_info()
    
    response = input("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏? (y/N): ").strip().lower()
    if response in ['y', 'yes', '–¥–∞']:
        if migrate_math_tasks_table():
            print("\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            print("–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.")
        else:
            print("\n‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–∞–º–∏!")
            sys.exit(1)
    else:
        print("–ú–∏–≥—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")
