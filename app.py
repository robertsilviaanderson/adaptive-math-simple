from flask import Flask, render_template, request, redirect, url_for, flash, jsonify, get_flashed_messages
from flask_login import LoginManager, login_user, logout_user, login_required, current_user
from models import db, User, StudentProfile
import os
from datetime import datetime

app = Flask(__name__)
app.config['SECRET_KEY'] = os.environ.get('SECRET_KEY', 'dev-secret-key-change-in-production')
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π PostgreSQL –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
database_url = os.environ.get('DATABASE_URL', 'sqlite:///math_learning.db')
if database_url.startswith('postgres://'):
    database_url = database_url.replace('postgres://', 'postgresql://', 1)
app.config['SQLALCHEMY_DATABASE_URI'] = database_url
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
db.init_app(app)
login_manager = LoginManager()
login_manager.init_app(app)
login_manager.login_view = 'login'
login_manager.login_message = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ.'

@login_manager.user_loader
def load_user(user_id):
    return User.query.get(int(user_id))

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
def init_db():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    with app.app_context():
        db.create_all()
        print("Database tables created successfully!")

# –í—ã–∑—ã–≤–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –º–æ–¥—É–ª—è
init_db()

@app.route('/')
def home():
    # –ü–æ–ª—É—á–∞–µ–º flash-—Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ –≤—ã—Ö–æ–¥–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã)
    messages = []
    flashed_messages = get_flashed_messages(with_categories=True)
    for category, message in flashed_messages:
        if category == 'info' and '–≤—ã—à–ª–∏' in message:
            color = '#d1ecf1'
            text_color = '#0c5460'
            messages.append(f'<div style="background: {color}; color: {text_color}; padding: 15px; margin: 20px 0; border-radius: 5px; text-align: center;">{message}</div>')
    
    messages_html = ''.join(messages)
    
    return f'''
    <!DOCTYPE html>
    <html lang="ru">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>–°–∏—Å—Ç–µ–º–∞ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                max-width: 800px;
                margin: 0 auto;
                padding: 20px;
                background-color: #f5f5f5;
            }
            .container {
                background: white;
                padding: 30px;
                border-radius: 10px;
                box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            }
            h1 {
                color: #2c3e50;
                text-align: center;
                margin-bottom: 30px;
            }
            .btn {
                display: inline-block;
                background: #3498db;
                color: white;
                padding: 12px 24px;
                text-decoration: none;
                border-radius: 5px;
                margin: 10px;
                border: none;
                cursor: pointer;
            }
            .btn:hover {
                background: #2980b9;
            }
            .status {
                background: #d4edda;
                color: #155724;
                padding: 15px;
                border-radius: 5px;
                margin: 20px 0;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>üéì –°–∏—Å—Ç–µ–º–∞ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ v2.0</h1>
            
            {messages_html}
            
            <div class="status">
                ‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ!
            </div>
            
            <div style="text-align: center;">
                <a href="/register" class="btn">üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</a>
                <a href="/login" class="btn">üîê –í—Ö–æ–¥</a>
            </div>
            
            <p style="text-align: center; margin-top: 30px; color: #7f8c8d;">
                –í–µ—Ä—Å–∏—è 2.0 - —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            </p>
        </div>
    </body>
    </html>
    '''

@app.route('/register', methods=['GET', 'POST'])
def register():
    if request.method == 'POST':
        try:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã
            username = request.form.get('username')
            email = request.form.get('email')
            password = request.form.get('password')
            role = request.form.get('role', 'student')
            first_name = request.form.get('first_name', '')
            last_name = request.form.get('last_name', '')
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            if User.query.filter_by(username=username).first():
                flash('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!', 'error')
                return redirect(url_for('register'))
            
            if User.query.filter_by(email=email).first():
                flash('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!', 'error')
                return redirect(url_for('register'))
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user = User(
                username=username,
                email=email,
                role=role,
                first_name=first_name,
                last_name=last_name
            )
            user.set_password(password)
            
            db.session.add(user)
            db.session.commit()
            
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞
            if role == 'student':
                profile = StudentProfile(user_id=user.id)
                db.session.add(profile)
                db.session.commit()
            
            flash('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É.', 'success')
            return redirect(url_for('login'))
            
        except Exception as e:
            db.session.rollback()
            print(f"Registration error: {str(e)}")
            flash(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {str(e)}', 'error')
            return redirect(url_for('register'))
    
    # GET –∑–∞–ø—Ä–æ—Å - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ flash-—Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤—Ö–æ–¥–∞
    messages = []
    flashed_messages = get_flashed_messages(with_categories=True)
    for category, message in flashed_messages:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –æ—à–∏–±–∫–∏ –≤—Ö–æ–¥–∞, –Ω–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –∏ –Ω–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –≤—ã—Ö–æ–¥–µ
        if category == 'error' or (category == 'success' and '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å' not in message and '–≤—ã—à–ª–∏' not in message):
            color = '#d4edda' if category == 'success' else '#f8d7da'
            text_color = '#155724' if category == 'success' else '#721c24'
            messages.append(f'<div style="background: {color}; color: {text_color}; padding: 10px; margin: 10px 0; border-radius: 5px;">{message}</div>')
    
    messages_html = ''.join(messages)
    
    return f'''
    <h1>üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</h1>
    {messages_html}
    <form method="POST">
        <p><input type="text" name="username" placeholder="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" required></p>
        <p><input type="email" name="email" placeholder="Email" required></p>
        <p><input type="password" name="password" placeholder="–ü–∞—Ä–æ–ª—å" required></p>
        <p><input type="text" name="first_name" placeholder="–ò–º—è"></p>
        <p><input type="text" name="last_name" placeholder="–§–∞–º–∏–ª–∏—è"></p>
        <p>
            <select name="role">
                <option value="student">–°—Ç—É–¥–µ–Ω—Ç</option>
                <option value="teacher">–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å</option>
            </select>
        </p>
        <p><button type="submit">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button></p>
    </form>
    <p><a href="/">‚Üê –ì–ª–∞–≤–Ω–∞—è</a> | <a href="/login">–í–æ–π—Ç–∏</a></p>
    '''

@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        try:
            username = request.form.get('username')
            password = request.form.get('password')
            
            user = User.query.filter_by(username=username).first()
            
            if user and user.check_password(password):
                login_user(user)
                # –£–ø—Ä–æ—â–µ–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–¥–∞
                user.last_login = datetime.utcnow()
                db.session.commit()
                flash(f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.get_full_name()}!', 'success')
                return redirect(url_for('dashboard'))
            else:
                flash('–ù–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø–∞—Ä–æ–ª—å!', 'error')
                
        except Exception as e:
            db.session.rollback()
            print(f"Login error: {str(e)}")
            flash(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ: {str(e)}', 'error')
            return redirect(url_for('login'))
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ flash-—Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤—Ö–æ–¥–∞
    messages = []
    flashed_messages = get_flashed_messages(with_categories=True)
    for category, message in flashed_messages:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –æ—à–∏–±–∫–∏ –≤—Ö–æ–¥–∞, –Ω–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –∏ –Ω–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –≤—ã—Ö–æ–¥–µ
        if category == 'error' or (category == 'success' and '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å' not in message and '–≤—ã—à–ª–∏' not in message):
            color = '#d4edda' if category == 'success' else '#f8d7da'
            text_color = '#155724' if category == 'success' else '#721c24'
            messages.append(f'<div style="background: {color}; color: {text_color}; padding: 10px; margin: 10px 0; border-radius: 5px;">{message}</div>')
    
    messages_html = ''.join(messages)
    
    return f'''
    <h1>üîê –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É</h1>
    {messages_html}
    <form method="POST">
        <p><input type="text" name="username" placeholder="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" required></p>
        <p><input type="password" name="password" placeholder="–ü–∞—Ä–æ–ª—å" required></p>
        <p><button type="submit">–í–æ–π—Ç–∏</button></p>
    </form>
    <p><a href="/">‚Üê –ì–ª–∞–≤–Ω–∞—è</a> | <a href="/register">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</a></p>
    '''

@app.route('/dashboard')
@login_required
def dashboard():
    try:
        user_name = current_user.get_full_name() if hasattr(current_user, 'get_full_name') else current_user.username
        
        if current_user.role == 'student':
            return f'''
            <h1>üéì –ü–∞–Ω–µ–ª—å —Å—Ç—É–¥–µ–Ω—Ç–∞</h1>
            <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user_name}!</p>
            <p>–†–æ–ª—å: {current_user.role}</p>
            <p>–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...</p>
            <p><a href="/logout">–í—ã–π—Ç–∏</a></p>
            '''
        else:
            return f'''
            <h1>üë®‚Äçüè´ –ü–∞–Ω–µ–ª—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è</h1>
            <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user_name}!</p>
            <p>–†–æ–ª—å: {current_user.role}</p>
            <p>–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...</p>
            <p><a href="/logout">–í—ã–π—Ç–∏</a></p>
            '''
    except Exception as e:
        return f'<h1>–û—à–∏–±–∫–∞ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</h1><p>–û—à–∏–±–∫–∞: {str(e)}</p><p><a href="/logout">–í—ã–π—Ç–∏</a></p>'

@app.route('/logout')
@login_required
def logout():
    logout_user()
    flash('–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã.', 'info')
    return redirect(url_for('home'))

if __name__ == '__main__':
    with app.app_context():
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        db.create_all()
    
    app.run(host='0.0.0.0', port=5000, debug=True)
