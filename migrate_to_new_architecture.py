#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∫ –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–≥–æ –º–µ—Ö–∞–Ω–∏–∑–º–∞
- –£–¥–∞–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã student_profiles
- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã math_tasks (level -> level, topic -> topic_id)
- –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ç–∞–±–ª–∏—Ü: topics, topic_level_configs, student_evaluation_logs, 
  student_topic_progress, evaluation_system_config
"""

import os
import sys
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app import app
from models import db, Topic, TopicLevelConfig, EvaluationSystemConfig

def backup_database():
    """–°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    import shutil
    db_path = 'instance/math_learning.db'
    backup_path = f'instance/math_learning_backup_{datetime.now().strftime("%Y%m%d_%H%M%S")}.db'
    
    if os.path.exists(db_path):
        shutil.copy2(db_path, backup_path)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_path}")
    else:
        print("‚ö†Ô∏è –§–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω")

def migrate_database():
    """–í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    with app.app_context():
        print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        
        # 1. –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
        backup_database()
        
        # 2. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Ç–∞–±–ª–∏—Ü—É student_profiles –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        try:
            db.engine.execute("DROP TABLE IF EXISTS student_profiles")
            print("‚úÖ –£–¥–∞–ª–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ student_profiles")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ student_profiles: {e}")
        
        # 3. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ —Ç–∞–±–ª–∏—Ü—ã
        try:
            db.create_all()
            print("‚úÖ –°–æ–∑–¥–∞–Ω—ã –Ω–æ–≤—ã–µ —Ç–∞–±–ª–∏—Ü—ã")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü: {e}")
            return False
            
        # 4. –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å–∏—Å—Ç–µ–º—ã –æ—Ü–µ–Ω–∫–∏
        try:
            config = EvaluationSystemConfig.query.first()
            if not config:
                config = EvaluationSystemConfig()
                db.session.add(config)
                db.session.commit()
                print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ –±–∞–∑–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –æ—Ü–µ–Ω–∫–∏")
            else:
                print("‚ÑπÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –æ—Ü–µ–Ω–∫–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
            return False
            
        # 5. –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ —Ç–µ–º—ã –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        try:
            create_demo_topics()
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–µ–º–æ-—Ç–µ–º: {e}")
            return False
            
        print("üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        return True

def create_demo_topics():
    """–°–æ–∑–¥–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ–º—ã"""
    demo_topics = [
        {
            'code': 'quadratic_equations',
            'name': '–ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ —É—Ä–∞–≤–Ω–µ–Ω–∏—è',
            'description': '–†–µ—à–µ–Ω–∏–µ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —É—Ä–∞–≤–Ω–µ–Ω–∏–π —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏'
        },
        {
            'code': 'linear_systems',
            'name': '–°–∏—Å—Ç–µ–º—ã –ª–∏–Ω–µ–π–Ω—ã—Ö —É—Ä–∞–≤–Ω–µ–Ω–∏–π',
            'description': '–†–µ—à–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º –ª–∏–Ω–µ–π–Ω—ã—Ö —É—Ä–∞–≤–Ω–µ–Ω–∏–π'
        },
        {
            'code': 'geometry_triangles',
            'name': '–ì–µ–æ–º–µ—Ç—Ä–∏—è —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤',
            'description': '–°–≤–æ–π—Å—Ç–≤–∞ –∏ –∑–∞–¥–∞—á–∏ –Ω–∞ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∏'
        }
    ]
    
    for topic_data in demo_topics:
        existing_topic = Topic.query.filter_by(code=topic_data['code']).first()
        if not existing_topic:
            topic = Topic(**topic_data)
            db.session.add(topic)
            
            # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —É—Ä–æ–≤–Ω—è
            for level in ['low', 'medium', 'high']:
                config = TopicLevelConfig(
                    topic=topic,
                    level=level,
                    task_count_threshold=5 if level == 'low' else (7 if level == 'medium' else 10),
                    reference_time=300 if level == 'low' else (240 if level == 'medium' else 180),  # —Å–µ–∫—É–Ω–¥—ã
                    penalty_weights=[0.7, 0.4]  # —à—Ç—Ä–∞—Ñ—ã –∑–∞ 2-—é –∏ 3-—é –ø–æ–ø—ã—Ç–∫–∏
                )
                db.session.add(config)
    
    db.session.commit()
    print("‚úÖ –°–æ–∑–¥–∞–Ω—ã –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ–º—ã –∏ –∏—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")

def show_migration_info():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∏–≥—Ä–∞—Ü–∏–∏"""
    print("=" * 60)
    print("–ú–ò–ì–†–ê–¶–ò–Ø –ö –ù–û–í–û–ô –ê–†–•–ò–¢–ï–ö–¢–£–†–ï –ê–î–ê–ü–¢–ò–í–ù–û–ì–û –ú–ï–•–ê–ù–ò–ó–ú–ê")
    print("=" * 60)
    print()
    print("–ò–∑–º–µ–Ω–µ–Ω–∏—è:")
    print("‚Ä¢ –£–¥–∞–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ StudentProfile")
    print("‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ MathTask: level -> level, topic -> topic_id")
    print("‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π:")
    print("  - Topic (—Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Ç–µ–º)")
    print("  - TopicLevelConfig (–ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∫–∞–∂–¥–æ–π —Ç–µ–º—ã/—É—Ä–æ–≤–Ω—è)")
    print("  - StudentEvaluationLog (–∂—É—Ä–Ω–∞–ª –æ—Ü–µ–Ω–æ–∫)")
    print("  - StudentTopicProgress (—Ç–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å)")
    print("  - EvaluationSystemConfig (–≥–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏)")
    print()
    print("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ë—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print()

if __name__ == "__main__":
    show_migration_info()
    
    response = input("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é? (y/N): ").strip().lower()
    if response in ['y', 'yes', '–¥–∞']:
        if migrate_database():
            print("\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            print("–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å.")
        else:
            print("\n‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–∞–º–∏!")
            sys.exit(1)
    else:
        print("–ú–∏–≥—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")
